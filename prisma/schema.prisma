// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@index([authorId])
}

model Profile {
  id     String @id @default(uuid())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId String     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId])
}

model User {
  id                String @id @default(uuid())
  email             String   @unique
  password          String
  firstName         String?
  lastName          String?
  posts             Post[]
  profile           Profile?
  tokens            Activations[]
  verifications            VerificationToken[]
  emailVerified     Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activations {
  id                String @id @default(uuid())
  token             String @unique
  userId            String 
  user              User @relation(fields: [userId], references: [id], onDelete: Cascade)
  activatedAt       DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId])
}

model VerificationToken {
  id                String @id @default(uuid())
  token             String @unique
  userId            String @unique
  user              User @relation(fields: [userId], references: [id], onDelete: Cascade)
  activatedAt       DateTime?
  expires    DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, token])
}



